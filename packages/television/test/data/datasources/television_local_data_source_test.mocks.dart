// Mocks generated by Mockito 5.3.2 from annotations
// in television/test/data/datasources/television_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i4;
import 'package:television/src/data/datasources/db/television_database_helper.dart'
    as _i2;
import 'package:television/src/data/models/television_watchlist_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TelevisionDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelevisionDatabaseHelper extends _i1.Mock
    implements _i2.TelevisionDatabaseHelper {
  @override
  _i3.Future<_i4.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i3.Future<_i4.Database?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.Database?>.value(),
      ) as _i3.Future<_i4.Database?>);
  @override
  _i3.Future<int> insertWatchlist(
          _i5.TelevisionWatchlistModel? televisionWatchlistModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [televisionWatchlistModel],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> removeWatchlist(
          _i5.TelevisionWatchlistModel? televisionWatchlistModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [televisionWatchlistModel],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<Map<String, dynamic>?> getTelevisionById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTelevisionById,
          [id],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);
  @override
  _i3.Future<List<Map<String, dynamic>>> getTelevisionWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTelevisionWatchlist,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);
}
