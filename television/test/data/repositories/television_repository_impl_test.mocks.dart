// Mocks generated by Mockito 5.3.2 from annotations
// in television/test/data/repositories/television_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:television/src/data/datasources/television_local_data_source.dart'
    as _i6;
import 'package:television/src/data/datasources/television_remote_data_source.dart'
    as _i3;
import 'package:television/src/data/models/television_detail_model.dart' as _i2;
import 'package:television/src/data/models/television_model.dart' as _i5;
import 'package:television/src/data/models/television_watchlist_model.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTelevisionDetailModel_0 extends _i1.SmartFake
    implements _i2.TelevisionDetailModel {
  _FakeTelevisionDetailModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TelevisionRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelevisionRemoteDataSource extends _i1.Mock
    implements _i3.TelevisionRemoteDataSource {
  @override
  _i4.Future<List<_i5.TelevisionModel>> getOnTheAirShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirShows,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
      ) as _i4.Future<List<_i5.TelevisionModel>>);
  @override
  _i4.Future<List<_i5.TelevisionModel>> getPopularShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularShows,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
      ) as _i4.Future<List<_i5.TelevisionModel>>);
  @override
  _i4.Future<List<_i5.TelevisionModel>> getTopRatedShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedShows,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
      ) as _i4.Future<List<_i5.TelevisionModel>>);
  @override
  _i4.Future<List<_i5.TelevisionModel>> getShowRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShowRecommendations,
          [id],
        ),
        returnValue: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
      ) as _i4.Future<List<_i5.TelevisionModel>>);
  @override
  _i4.Future<List<_i5.TelevisionModel>> searchShows(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchShows,
          [query],
        ),
        returnValue: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
        returnValueForMissingStub: _i4.Future<List<_i5.TelevisionModel>>.value(
            <_i5.TelevisionModel>[]),
      ) as _i4.Future<List<_i5.TelevisionModel>>);
  @override
  _i4.Future<_i2.TelevisionDetailModel> getShowDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShowDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.TelevisionDetailModel>.value(
            _FakeTelevisionDetailModel_0(
          this,
          Invocation.method(
            #getShowDetail,
            [id],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.TelevisionDetailModel>.value(
            _FakeTelevisionDetailModel_0(
          this,
          Invocation.method(
            #getShowDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.TelevisionDetailModel>);
}

/// A class which mocks [TelevisionLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelevisionLocalDataSource extends _i1.Mock
    implements _i6.TelevisionLocalDataSource {
  @override
  _i4.Future<String> insertWatchlist(
          _i7.TelevisionWatchlistModel? televisionWatchlistModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [televisionWatchlistModel],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> removeWatchlist(
          _i7.TelevisionWatchlistModel? televisionWatchlistModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [televisionWatchlistModel],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i7.TelevisionWatchlistModel?> getTelevisionById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTelevisionById,
          [id],
        ),
        returnValue: _i4.Future<_i7.TelevisionWatchlistModel?>.value(),
        returnValueForMissingStub:
            _i4.Future<_i7.TelevisionWatchlistModel?>.value(),
      ) as _i4.Future<_i7.TelevisionWatchlistModel?>);
  @override
  _i4.Future<List<_i7.TelevisionWatchlistModel>> getTelevisionWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTelevisionWatchlist,
          [],
        ),
        returnValue: _i4.Future<List<_i7.TelevisionWatchlistModel>>.value(
            <_i7.TelevisionWatchlistModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i7.TelevisionWatchlistModel>>.value(
                <_i7.TelevisionWatchlistModel>[]),
      ) as _i4.Future<List<_i7.TelevisionWatchlistModel>>);
}
