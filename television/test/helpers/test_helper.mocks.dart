// Mocks generated by Mockito 5.3.2 from annotations
// in television/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i13;
import 'dart:typed_data' as _i14;

import 'package:core/core.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/src/base_request.dart' as _i12;
import 'package:http/src/io_client.dart' as _i11;
import 'package:http/src/io_streamed_response.dart' as _i3;
import 'package:http/src/response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:television/src/domain/entities/television.dart' as _i8;
import 'package:television/src/domain/entities/television_detail.dart' as _i9;
import 'package:television/src/domain/entities/television_watchlist.dart'
    as _i10;
import 'package:television/src/domain/repositories/television_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_1 extends _i1.SmartFake
    implements _i3.IOStreamedResponse {
  _FakeIOStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TelevisionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelevisionRepository extends _i1.Mock
    implements _i5.TelevisionRepository {
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>
      getOnTheAirShows() => (super.noSuchMethod(
            Invocation.method(
              #getOnTheAirShows,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getOnTheAirShows,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getOnTheAirShows,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>> getPopularShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularShows,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Television>>(
          this,
          Invocation.method(
            #getPopularShows,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Television>>(
          this,
          Invocation.method(
            #getPopularShows,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>
      getTopRatedShows() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedShows,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getTopRatedShows,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getTopRatedShows,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>
      getShowRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getShowRecommendations,
              [id],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getShowRecommendations,
                [id],
              ),
            )),
            returnValueForMissingStub:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Television>>(
              this,
              Invocation.method(
                #getShowRecommendations,
                [id],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TelevisionDetail>> getShowDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShowDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i9.TelevisionDetail>>.value(
                _FakeEither_0<_i7.Failure, _i9.TelevisionDetail>(
          this,
          Invocation.method(
            #getShowDetail,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Either<_i7.Failure, _i9.TelevisionDetail>>.value(
                _FakeEither_0<_i7.Failure, _i9.TelevisionDetail>(
          this,
          Invocation.method(
            #getShowDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.TelevisionDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>> searchShows(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchShows,
          [query],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Television>>(
          this,
          Invocation.method(
            #searchShows,
            [query],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Television>>(
          this,
          Invocation.method(
            #searchShows,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Television>>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i9.TelevisionDetail? televisionDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [televisionDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [televisionDetail],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [televisionDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> deleteWatchlist(
          _i9.TelevisionDetail? televisionDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWatchlist,
          [televisionDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #deleteWatchlist,
            [televisionDetail],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #deleteWatchlist,
            [televisionDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<
      _i2.Either<_i7.Failure,
          List<_i10.TelevisionWatchlist>>> getTelevisionWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTelevisionWatchlist,
          [],
        ),
        returnValue: _i6.Future<
                _i2.Either<_i7.Failure, List<_i10.TelevisionWatchlist>>>.value(
            _FakeEither_0<_i7.Failure, List<_i10.TelevisionWatchlist>>(
          this,
          Invocation.method(
            #getTelevisionWatchlist,
            [],
          ),
        )),
        returnValueForMissingStub: _i6.Future<
                _i2.Either<_i7.Failure, List<_i10.TelevisionWatchlist>>>.value(
            _FakeEither_0<_i7.Failure, List<_i10.TelevisionWatchlist>>(
          this,
          Invocation.method(
            #getTelevisionWatchlist,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i10.TelevisionWatchlist>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i11.IOClient {
  @override
  _i6.Future<_i3.IOStreamedResponse> send(_i12.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.IOStreamedResponse>.value(_FakeIOStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.IOStreamedResponse>.value(_FakeIOStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
        returnValueForMissingStub: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i14.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i14.Uint8List>.value(_i14.Uint8List(0)),
        returnValueForMissingStub:
            _i6.Future<_i14.Uint8List>.value(_i14.Uint8List(0)),
      ) as _i6.Future<_i14.Uint8List>);
}
